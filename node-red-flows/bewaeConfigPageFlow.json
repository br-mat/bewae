[
    {
        "id": "0dc0942eb5a59979",
        "type": "tab",
        "label": "bewaeConfigPage",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e5229ff60d1d91c2",
        "type": "http in",
        "z": "0dc0942eb5a59979",
        "name": "bewae config page",
        "url": "/bewae",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 280,
        "wires": [
            [
                "8c77a299d11b7da0"
            ]
        ]
    },
    {
        "id": "0b5eb0549573f19d",
        "type": "json",
        "z": "0dc0942eb5a59979",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 180,
        "wires": [
            [
                "fd3487f8a0ced5c3",
                "13f2c7649b66e075"
            ]
        ]
    },
    {
        "id": "8c77a299d11b7da0",
        "type": "template",
        "z": "0dc0942eb5a59979",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Bewae V3</title>\n\n<style>\n  /* Top navigation bar styling */\n  .violet-bar {\n    background-color: #8a2be2;\n    color: white;\n    padding: 10px;\n    text-align: left;\n  }\n\n  /* Form styling for plant data entry */\n  .plant-form {\n    margin: 20px auto;\n    padding: 20px;\n    max-width: 900px;\n    background-color: #f2f2f2;\n  }\n\n  /* Label styling within the form */\n  .plant-form label {\n    display: block;\n    margin-bottom: 10px;\n  }\n\n  /* Text and number input field styling */\n  .plant-form input[type=\"text\"],\n  .plant-form input[type=\"number\"] {\n    width: calc(100% - 10px);\n    padding: 8px;\n    margin-bottom: 10px;\n    box-sizing: border-box;\n  }\n\n  /* 'Add plant' button styling */\n  .plant-form button.add-plant-button {\n    background-color: #388e3c;\n    color: white;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    width: calc(100% - 10px);\n    border-radius: 20px;\n  }\n\n  /* Table styling for displaying saved plant data */\n  table {\n    margin-top: 20px;\n    width: 100%;\n    border-collapse: collapse;\n  }\n\n  /* Table header and cell styling */\n  th, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n  }\n\n  /* Table header row styling */\n  th {\n    background-color: #f2f2f2;\n  }\n\n  /* Button styling for edit, delete, and add actions */\n  .edit-button, .delete-button, .add-plant-button {\n    color: white;\n    border: none;\n    padding: 8px;\n    cursor: pointer;\n    width: 90%;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\n    transition: 0.3s;\n    font-size: 0.9em;\n  }\n\n  /* Button hover effect for edit, delete, and add actions */\n  .edit-button:hover, .delete-button:hover, .add-plant-button:hover {\n    box-shadow: 0 6px 12px 0 rgba(0,0,0,0.3);\n  }\n\n  /* Alternate row styling for the table */\n  table tr:nth-child(even) {\n    background-color: rgba(138, 43, 226, 0.1);\n  }\n\n  /* Edit button specific styling */\n  .edit-button {\n    background-color: #f39c12;\n    color: black;\n  }\n\n  /* Delete button specific styling */\n  .delete-button {\n    background-color: #8e44ad;\n  }\n\n  /* Table container styling for layout */\n  .table-container {\n    width: 75%;\n    margin: 0 auto;\n  }\n</style>\n\n</head>\n<body>\n  <!-- Navigation bar with title -->\n  <div class=\"violet-bar\">PlantZ</div>\n\n  <!-- Table container for displaying plant data -->\n  <div class=\"table-container\">\n    <table id=\"plantTable\">\n      <tr>\n        <th>Plant Name</th>\n        <th>Default Water</th>\n        <th>Plant Size</th>\n        <th>Pot Size</th>\n        <th>Water Times</th>\n        <th>vPins</th>\n        <th>Set</th>\n        <th>Actions</th>\n      </tr>\n      <!-- Rows with plant data will be dynamically added here -->\n    </table>\n  </div>\n\n  <!-- Form for adding new plant data -->\n  <div class=\"plant-form\">\n    <form id=\"plantForm\">\n      <label for=\"plantName\">Plant Name:</label>\n      <input type=\"text\" id=\"plantName\">\n\n      <label for=\"defaultWater\">Default Water:</label>\n      <input type=\"number\" id=\"defaultWater\">\n\n      <label for=\"plantSize\">Plant Size:</label>\n      <input type=\"number\" id=\"plantSize\">\n\n      <label for=\"potSize\">Pot Size:</label>\n      <input type=\"number\" id=\"potSize\">\n\n      <label for=\"waterTimes\">Water Times (comma-separated):</label>\n      <input type=\"text\" id=\"waterTimes\">\n\n      <label for=\"vPins\">vPins (comma-separated):</label>\n      <input type=\"text\" id=\"vPins\">\n\n      <label for=\"set\">Set:</label>\n      <input type=\"number\" id=\"set\">\n\n      <button type=\"button\" class=\"add-plant-button\" onclick=\"addPlant(event)\">Add Plant</button>\n    </form>\n  </div>\n</body>\n\n<script>\n  // Function to load data from the server\n  function loadData() {\n    return fetch('/bewae/get-config')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Data loaded:', data);\n        return data;\n      })\n      .catch(error => {\n        console.error('There has been a problem with your fetch operation:', error);\n      });\n  }\n\n  function saveData() {\n    var plantTable = document.getElementById('plantTable');\n    var data = {}; // Initialize data as an object\n    for (var i = 1; i < plantTable.rows.length; i++) {\n      var row = plantTable.rows[i];\n      var plantName = row.cells[0].innerText;\n      data[plantName] = { // Use plantName as the key for each plant\n        \"defaultWater\": parseInt(row.cells[1].innerText),\n        \"plantSize\": parseInt(row.cells[2].innerText),\n        \"potSize\": parseFloat(row.cells[3].innerText),\n        \"waterTimes\": row.cells[4].innerText.split(',').map(Number), // Convert strings to numbers\n        \"vPins\": row.cells[5].innerText.split(',').map(Number), // Convert strings to numbers\n        \"set\": parseInt(row.cells[6].innerText) // Convert string to number\n      };\n    }\n    // Convert the object to a JSON string\n    var jsonData = JSON.stringify(data);\n    // Send the JSON data using XMLHttpRequest\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"/bewae/save\", true);\n    xhr.setRequestHeader('Content-Type', 'application/json');\n    xhr.send(jsonData);\n  }\n\n  // Function to initialize table with data\n  function initializeTable(data) {\n    const plantTable = document.getElementById(\"plantTable\");\n    for (const key in data) {\n      if (data.hasOwnProperty(key)) {\n        const plant = data[key];\n        const newRow = plantTable.insertRow();\n        newRow.innerHTML = `<td>${key}</td><td>${plant[\"defaultWater\"]}</td><td>${plant[\"plantSize\"]}</td><td>${plant[\"potSize\"]}</td><td>${plant[\"waterTimes\"].join(',')}</td><td>${plant[\"vPins\"].join(',')}</td><td>${plant[\"set\"]}</td><td><button class=\"edit-button\" onclick=\"editPlant(this)\">Edit</button><button class=\"delete-button\" onclick=\"deletePlant(this)\">Delete</button></td>`;\n      }\n    }\n  }\n\n  // Event listener for DOMContentLoaded\n  document.addEventListener('DOMContentLoaded', (event) => {\n    loadData().then(data => {\n      initializeTable(data);\n    });\n  });\n\n  function addPlant() {\n    event.preventDefault(); // Prevent default form submission\n    const plantName = document.getElementById(\"plantName\").value;\n    const defaultWater = document.getElementById(\"defaultWater\").value;\n    const plantSize = document.getElementById(\"plantSize\").value;\n    const potSize = document.getElementById(\"potSize\").value;\n    const waterTimes = document.getElementById(\"waterTimes\").value.split(',');\n    const vPins = document.getElementById(\"vPins\").value.split(',');\n    const set = document.getElementById(\"set\").value;\n    const newRow = plantTable.insertRow();\n    newRow.innerHTML = `<td>${plantName}</td><td>${defaultWater}</td><td>${plantSize}</td><td>${potSize}</td><td>${waterTimes.join(',')}</td><td>${vPins.join(',')}</td><td>${set}</td><td><button class=\"edit-button\" onclick=\"editPlant(this)\">Edit</button><button class=\"delete-button\" onclick=\"deletePlant(this)\">Delete</button></td>`;\n    console.log('Saving data:', { plantName, defaultWater, plantSize, potSize, waterTimes, vPins, set }); // Log data for debugging\n    saveData();\n  }\n\n\n  function editPlant(button) {\n    const row = button.parentNode.parentNode;\n    const cells = row.getElementsByTagName(\"td\");\n\n    const plantName = cells[0].innerHTML;\n    const defaultWater = cells[1].innerHTML;\n    const plantSize = cells[2].innerHTML;\n    const potSize = cells[3].innerHTML;\n    const waterTimes = cells[4].innerHTML.split(',');\n    const vPins = cells[5].innerHTML.split(',');\n    const set = cells[6].innerHTML;\n\n    cells[0].innerHTML = `<input type=\"text\" id=\"edit-plantName\" value=\"${plantName}\">`;\n    cells[1].innerHTML = `<input type=\"number\" id=\"edit-defaultWater\" value=\"${defaultWater}\">`;\n    cells[2].innerHTML = `<input type=\"number\" id=\"edit-plantSize\" value=\"${plantSize}\">`;\n    cells[3].innerHTML = `<input type=\"number\" id=\"edit-potSize\" value=\"${potSize}\">`;\n    cells[4].innerHTML = `<input type=\"text\" id=\"edit-waterTimes\" value=\"${waterTimes.join(',')}\">`;\n    cells[5].innerHTML = `<input type=\"text\" id=\"edit-vPins\" value=\"${vPins.join(',')}\">`;\n    cells[6].innerHTML = `<input type=\"number\" id=\"edit-set\" value=\"${set}\">`;\n\n    button.innerHTML = \"Save\";\n    button.onclick = function() {\n      savePlant(this);\n    };\n    saveData();\n  }\n\n  function savePlant(button) {\n    const row = button.parentNode.parentNode;\n    const cells = row.getElementsByTagName(\"td\");\n\n    const plantName = document.getElementById(\"edit-plantName\").value;\n    const defaultWater = document.getElementById(\"edit-defaultWater\").value;\n    const plantSize = document.getElementById(\"edit-plantSize\").value;\n    const potSize = document.getElementById(\"edit-potSize\").value;\n    const waterTimes = document.getElementById(\"edit-waterTimes\").value.split(',');\n    const vPins = document.getElementById(\"edit-vPins\").value.split(',');\n    const set = document.getElementById(\"edit-set\").value;\n\n    cells[0].innerHTML = plantName;\n    cells[1].innerHTML = defaultWater;\n    cells[2].innerHTML = plantSize;\n    cells[3].innerHTML = potSize;\n    cells[4].innerHTML = waterTimes.join(',');\n    cells[5].innerHTML = vPins.join(',');\n    cells[6].innerHTML = set;\n\n    button.innerHTML = \"Edit\";\n    button.onclick = function() {\n      editPlant(this);\n    };\n    saveData();\n  }\n\n  function deletePlant(button) {\n    const row = button.parentNode.parentNode;\n    plantTable.deleteRow(row.rowIndex);\n    saveData();\n  }\n\n</script>\n</body>\n</html>",
        "output": "str",
        "x": 740,
        "y": 280,
        "wires": [
            [
                "911befcdb9086491",
                "ad901883efaea969"
            ]
        ]
    },
    {
        "id": "911befcdb9086491",
        "type": "http response",
        "z": "0dc0942eb5a59979",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 280,
        "wires": []
    },
    {
        "id": "11eb26586ec06efb",
        "type": "http in",
        "z": "0dc0942eb5a59979",
        "name": "post config file",
        "url": "/bewae/save",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "41f0ce2a18afa204"
            ]
        ]
    },
    {
        "id": "c12447dc11f522d7",
        "type": "file",
        "z": "0dc0942eb5a59979",
        "name": "write file",
        "filename": "/path/to/bewae/web-config.json",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 600,
        "y": 420,
        "wires": [
            [
                "8a539049b4ea6712"
            ]
        ]
    },
    {
        "id": "a1814796e5b169ee",
        "type": "http in",
        "z": "0dc0942eb5a59979",
        "name": "get config file",
        "url": "/bewae/get-config",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "972fbf4b09e6043f"
            ]
        ]
    },
    {
        "id": "972fbf4b09e6043f",
        "type": "file in",
        "z": "0dc0942eb5a59979",
        "name": "read file",
        "filename": "/path/to/bewae/web-config.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 440,
        "y": 180,
        "wires": [
            [
                "0b5eb0549573f19d"
            ]
        ]
    },
    {
        "id": "fd3487f8a0ced5c3",
        "type": "http response",
        "z": "0dc0942eb5a59979",
        "name": "return config File",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "8a539049b4ea6712",
        "type": "debug",
        "z": "0dc0942eb5a59979",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 420,
        "wires": []
    },
    {
        "id": "ad901883efaea969",
        "type": "debug",
        "z": "0dc0942eb5a59979",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "13f2c7649b66e075",
        "type": "debug",
        "z": "0dc0942eb5a59979",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 140,
        "wires": []
    },
    {
        "id": "7982a075b3e7a38a",
        "type": "inject",
        "z": "0dc0942eb5a59979",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 240,
        "wires": [
            [
                "8c77a299d11b7da0"
            ]
        ]
    },
    {
        "id": "9b9b7c3ecfe253f9",
        "type": "inject",
        "z": "0dc0942eb5a59979",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "972fbf4b09e6043f"
            ]
        ]
    },
    {
        "id": "06927e2cdbc60cc9",
        "type": "inject",
        "z": "0dc0942eb5a59979",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{   \"Big Tomato15\": {     \"defaultWater\": 20,     \"plantSize\": 3,     \"potSize\": 0.3,     \"waterTimes\": [7, 10],     \"vPins\": [1],     \"set\": 0   },   \"Red Rose20\": {     \"defaultWater\": 15,     \"plantSize\": 2,     \"potSize\": 0.2,     \"waterTimes\": [6, 12],     \"vPins\": [2, 3],     \"set\": 1   },   \"Green Basil10\": {     \"defaultWater\": 25,     \"plantSize\": 1,     \"potSize\": 0.15,     \"waterTimes\": [8, 14],     \"vPins\": [4],     \"set\": 2   },   \"Yellow Sunflower30\": {     \"defaultWater\": 18,     \"plantSize\": 4,     \"potSize\": 0.4,     \"waterTimes\": [9, 15],     \"vPins\": [5],     \"set\": 3   } }",
        "payloadType": "json",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "41f0ce2a18afa204"
            ]
        ]
    },
    {
        "id": "41f0ce2a18afa204",
        "type": "json",
        "z": "0dc0942eb5a59979",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": true,
        "x": 430,
        "y": 420,
        "wires": [
            [
                "c12447dc11f522d7"
            ]
        ]
    }
]